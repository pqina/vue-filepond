{"version":3,"sources":["webpack://vue-filepond/webpack/universalModuleDefinition","webpack://vue-filepond/webpack/bootstrap","webpack://vue-filepond/external \"filepond\"","webpack://vue-filepond/external \"vue\"","webpack://vue-filepond/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://vue-filepond/./lib/index.js","webpack://vue-filepond/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__1d78__","__WEBPACK_EXTERNAL_MODULE__8bbf__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","currentScript","document","src","match","filteredComponentMethods","isSupported","supported","getNativeConstructorFromType","type","string","String","boolean","Boolean","array","Array","function","Function","int","Number","serverapi","props","events","instances","globalOptions","setOptions","options","assign","forEach","instance","plugins","registerPlugin","length","prop","OptionTypes","test","push","default","defineComponent","setup","emit","attrs","ref","pond","onMounted","element","querySelector","methods","reduce","obj","args","getFiles","substr","getOptions","userProps","userAttrs","attr","toLocaleLowerCase","indexOf","filePondOptions","keys","filter","includes","detached","destroy","index","splice","onUnmounted","offsetParent","mutationHandler","mutations","observer","removedNodes","removedNode","contains","disconnect","MutationObserver","observe","documentElement","childList","subtree","h","id","className","required","multiple","allowMultiple","accept","acceptedFileTypes","capture","captureMethod"],"mappings":"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","file":"vue-filepond.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"filepond\"), require(\"vue\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"filepond\", \"vue\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-filepond\"] = factory(require(\"filepond\"), require(\"vue\"));\n\telse\n\t\troot[\"vue-filepond\"] = factory(root[\"filepond\"], root[\"vue\"]);\n})((typeof self !== 'undefined' ? self : this), function(__WEBPACK_EXTERNAL_MODULE__1d78__, __WEBPACK_EXTERNAL_MODULE__8bbf__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1d78__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8bbf__;","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var currentScript = window.document.currentScript\n  if (process.env.NEED_CURRENTSCRIPT_POLYFILL) {\n    var getCurrentScript = require('@soda/get-current-script')\n    currentScript = getCurrentScript()\n\n    // for backward compatibility, because previously we directly included the polyfill\n    if (!('currentScript' in document)) {\n      Object.defineProperty(document, 'currentScript', { get: getCurrentScript })\n    }\n  }\n\n  var src = currentScript && currentScript.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/)\n  if (src) {\n    __webpack_public_path__ = src[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","import { defineComponent, onUnmounted, onMounted, ref, h } from 'vue';\nimport {\n    getOptions,\n    OptionTypes,\n    create,\n    supported,\n    registerPlugin\n} from 'filepond';\n\n// Methods not made available to the component\nconst filteredComponentMethods = [\n    'setOptions',\n    'on',\n    'off',\n    'onOnce',\n    'appendTo',\n    'insertAfter',\n    'insertBefore',\n    'isAttachedTo',\n    'replaceElement',\n    'restoreElement',\n    'destroy'\n];\n\n// Test if is supported on this client\nconst isSupported = supported();\n\n// Setup initial prop types and update when plugins are added\nconst getNativeConstructorFromType = type =>\n    ({\n        string: String,\n        boolean: Boolean,\n        array: Array,\n        function: Function,\n        int: Number,\n        serverapi: Object,\n        object: Object\n    }[type]);\n\n// Activated props\nconst props = {};\n\n// Events that need to be mapped to emitters\nconst events = [];\n\n// all active instances\nconst instances = [];\n\n// global options\nlet globalOptions = {};\n\nexport const setOptions = (options) => {\n    globalOptions = Object.assign(\n        globalOptions,\n        options\n    );\n    instances.forEach(instance => {\n        instance.setOptions(globalOptions);\n    });\n};\n\nexport default (...plugins) => {\n    // register plugins in FilePond\n    registerPlugin(...plugins);\n\n    // build events and props array\n    events.length = 0;\n\n    for (const prop in OptionTypes) {\n        // don't add events to the props array\n        if (/^on/.test(prop)) {\n            events.push(prop);\n            continue;\n        }\n\n        // get property type ( can be either a String or the type defined within FilePond )\n        props[prop] = {\n            type: [String, getNativeConstructorFromType(OptionTypes[prop])],\n            default: '__undefined__',\n        };\n    }\n\n    // create \n    return defineComponent({\n        name: 'FilePond',\n        props,\n        setup(props, { emit, attrs }) {\n            const root = ref(null);\n            let pond = null;\n\n            // Will setup FilePond instance when mounted\n            onMounted(() => {\n                // exit here if not supported\n                if (!isSupported) return;\n\n                // get pond element\n                const element = root.value.querySelector('input');\n\n                // Map FilePond callback methods to Vue $emitters\n                const methods = events.reduce((obj, value) => {\n                    obj[value] = (...args) => {\n                        emit('input', pond ? pond.getFiles() : []);\n                        emit(value.substr(2), ...args);\n                    };\n                    return obj;\n                }, {});\n\n                const options = getOptions();\n                const userProps = {};\n\n                for (const prop in props) {\n                    if (props[prop] !== '__undefined__') {\n                        userProps[prop] = props[prop];\n                    }\n                }\n\n                const userAttrs = {};\n\n                for (const attr in attrs) {\n                    const name = attr.toLocaleLowerCase();\n                    if (name.indexOf('on') === 0 && name !== 'oninit') {\n                        userAttrs[name] = attrs[attr];\n                    }\n                }\n\n                const filePondOptions = {\n                    ...globalOptions,\n                    ...methods,\n                    ...options,\n                    ...userProps,\n                    ...userAttrs,\n                };\n\n                // Create our pond\n                pond = create(element, filePondOptions);\n\n                // Copy instance method references to component instance\n                Object.keys(pond)\n                    .filter(key => !filteredComponentMethods.includes(key))\n                    .forEach(key => root.value[key] = pond[key]);\n\n                // Add to instances so we can apply global options when used\n                instances.push(pond);\n\n                emit('init', pond);\n            });\n\n            // called when the component root node has been detached\n            const detached = () => {\n                // exit when no pond defined\n                if (!pond.value) return;\n\n                // bye bye pond\n                pond.value.destroy();\n\n                // remove from instances\n                const index = instances.indexOf(pond.value);\n                if (index >= 0) instances.splice(index, 1);\n\n                // clear reference\n                pond.value = null;\n            };\n\n            // Will clean up FilePond instance when unmounted\n            onUnmounted(() => {\n\n                // no longer attached, clean up\n                if (root.value && !root.value.offsetParent) {\n                    detached();\n                    return;\n                }\n\n                // if we're still attached it's likely a transition is running, we need to \n                // determine the moment when we're no longer attached to the DOM so we can \n                // clean up properly\n                if (root.value !== null) {\n                    const mutationHandler = (mutations, observer) => {\n                        const removedNodes = (mutations[0] || {}).removedNodes || [];\n                        const removedNode = removedNodes[0];\n                        if (!removedNode || !removedNode.contains(root.value)) return;\n                        observer.disconnect();\n                        detached();\n                    }\n\n                    // start observing parent element for changes to the DOM\n                    const observer = new MutationObserver(mutationHandler);\n                    observer.observe(document.documentElement, { childList: true, subtree: true });\n                }\n            });\n\n            return () => h('div',\n                {\n                    ref: root,\n                    'class': {\n                        'filepond--wrapper': true\n                    }\n                },\n                [\n                    h('input',\n                    {\n                        id: props.id,\n                        name: props.name,\n                        type: 'file',\n                        'class': props.className,\n                        required: props.required,\n                        multiple: props.allowMultiple,\n                        accept: props.acceptedFileTypes,\n                        capture: props.captureMethod\n                    })\n                ]\n            );\n        }\n    });\n};","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"sourceRoot":""}